group 'com.thoughtworks.trains'
version "0.0.1"

ext {
    JAVA_VERSION = "1.8"
    JUNIT = "junit:junit:4.11"
    MOCKITO = "org.mockito:mockito-core:1.10.19"
    HAMCREST = "org.hamcrest:hamcrest-all:1.3"
    GUAVA = "com.google.guava:guava:18.0"
}

project(':') {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'application'

    compileJava {
        if (project.hasProperty('failOnWarnings'))
            options.compilerArgs << "-Werror"
    }

    tasks.withType(FindBugs) {
      reports {
        xml.enabled = false
        html.enabled = true
      }
    }

    findbugs {
      excludeFilter = new File(project(":").projectDir, "config/findbugs/excludeBugsFilter.xml")
    }

    checkstyle {
      toolVersion = "6.7"
      configFile = new File(project(":").projectDir, "config/checkstyle/checkstyle.xml")
    }

    task checkstyleHtml << {
      ant.xslt(in: checkstyleMain.reports.xml.destination,
               style: file('config/checkstyle-noframes-sorted.xsl'),
               out: new File(checkstyleMain.reports.xml.destination.parent, 'main.html'))
    }

    checkstyleMain.finalizedBy checkstyleHtml

    targetCompatibility = JAVA_VERSION
    sourceCompatibility = JAVA_VERSION
    compileJava.options*.encoding = 'UTF-8'
    compileTestJava.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile(GUAVA)
        testCompile(JUNIT, HAMCREST, MOCKITO)
    }

    mainClassName = "com.thoughtworks.trains.TrainRouteGenerator"
}

run{
    standardInput = System.in
}

idea {
    project {
        languageLevel = '1.8'
        jdkName = '1.8'

        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
